#!/bin/bash

set -e -o pipefail

title() { echo -e "\E[34m# $1\E[00m"; }
fatal() { echo -e "\E[31mError: $1\E[00m"; exit 1; }


DISTRO=$(grep "^ID=" /etc/os-release | cut -d'=' -f2 | tr -d '"')
DISTRO_VERSION=$(grep "^VERSION_ID=" /etc/os-release | cut -d'=' -f2 | tr -d '"')
[[ "$DISTRO_VERSION" =~ ^([0-9]{1,})\.([0-9]{1,})$ ]] || fatal "Invalid OS version string (have: ${DISTRO_VERSION})"
DISTRO_VERSION_MAJOR=${BASH_REMATCH[1]}
DISTRO_VERSION_MINOR=${BASH_REMATCH[2]}


# Verify we are on a supported distro.
case "${DISTRO}-${DISTRO_VERSION_MAJOR}" in
    rhel-8)
        [ "${DISTRO_VERSION_MINOR}" -lt 7 ] && fatal "RHEL8 version must be >= 8.7 (have: ${DISTRO_VERSION})."
        ;;

    rhel-9)
        [ "${DISTRO_VERSION_MINOR}" -lt 1 ] && fatal "RHEL9 version must be >= 9.1 (have: ${DISTRO_VERSION})."
        ;;

    *)
        fatal "\"${DISTRO}\" is not a supported distribution."
        ;;
esac

title "Installing experimental 'ostree' version (with support for embedding containers)"
# Remove original ostree packages
LIST2REMOVE=$(rpm -qa | grep -E '^ostree' || true)
[ -n "${LIST2REMOVE}" ] && sudo dnf remove -y ${LIST2REMOVE}

# Clean-up the old osbuild jobs and state to avoid incompatibilities between versions
sudo rm -rf /var/lib/osbuild-composer || true
sudo rm -rf /var/cache/{osbuild-composer,osbuild-worker} || true

# Add the repo for the experimental ostree packages (they'll be installed with osbuild)
sudo curl --location --output /etc/yum.repos.d/walters-ostreerhel8-centos-stream-8.repo \
    https://copr.fedorainfracloud.org/coprs/walters/ostreerhel8/repo/centos-stream-8/walters-ostreerhel8-centos-stream-8.repo

title "Installing ImageBuilder tools"
sudo dnf install -y \
    osbuild-composer composer-cli cockpit-composer \
    bash-completion podman genisoimage syslinux \
    createrepo syslinux yum-utils selinux-policy-devel jq wget lorax rpm-build

title "Starting osbuild-composer and cockpit services"
sudo systemctl enable osbuild-composer.socket
sudo systemctl enable cockpit.socket
sudo systemctl restart osbuild-composer.socket
sudo systemctl restart osbuild-local-worker.socket
sudo systemctl restart osbuild-composer.service

title "configuring firewall"
sudo firewall-cmd -q --add-service=cockpit --permanent
sudo firewall-cmd --reload

title "Done"
